{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66e766ed.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\n\r\n\r\nclass UserStore {\r\n    constructor(){\r\n\r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\n\r\n\r\nclass InputField extends React.Component {\r\n  render(){\r\n      return (\r\n        <div className=\"inputField\">\r\n            <input\r\n              className='input'\r\n              type={this.props.type}\r\n              placeholder={this.props.placeholder}\r\n              value={this.props.value}\r\n              onChange={ (e) => this.props.onChange(e.target.value) }\r\n        />\r\n        </div>\r\n        \r\n      );\r\n  }\r\n\r\n  }\r\n\r\nexport default InputField;","import React from 'react';\r\n\r\n\r\nclass SubmitButton extends React.Component{\r\n  render(){\r\n\r\n  \r\n      return (\r\n        <div className=\"submitButton\">\r\n          <button\r\n\r\n            className='btn'\r\n            disabled={this.props.disabled}\r\n            onClick={ () => this.props.onClick() }\r\n\r\n          >\r\n            \r\n\r\n            {this.props.text}\r\n          </button>\r\n        </div>\r\n      );\r\n}}\r\n\r\nexport default SubmitButton;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\n\r\n\r\nclass LoginForm extends React.Component{\r\n\r\n  constructor(props){\r\n\r\n    super(props)\r\n    this.state = {\r\n\r\n      username:'',\r\n      password:'',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val){\r\n    // sets the number of character to be typed in the field\r\n    val = val.trim();\r\n    if (val.length > 12){\r\n      return;\r\n\r\n    }\r\n    this. setState({\r\n      [property] : val\r\n    })\r\n  }\r\n\r\n  resetForm(){\r\n\r\n    this.setState({\r\n      username:'',\r\n      password:'',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n  async doLogin(){\r\n    if(!this.state.username){\r\n      return;\r\n    }\r\n    if (!this.state.password){\r\n      return;\r\n    }\r\n    this.setState({\r\n      buttonDisabled: true\r\n    })\r\n    try {\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers:{\r\n          'Accept':'application/json',\r\n          'Content-Type':'application/json'\r\n\r\n        },\r\n        //sends username and pw to API\r\n        body : JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n\r\n        })\r\n\r\n\r\n      });\r\n\r\n      let result = await res.json();\r\n      if (result && result.success){\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n\r\n      }\r\n      else if (result && result.success === false){\r\n        this.resetForm();\r\n        alert(result.msg);\r\n\r\n      }\r\n    }\r\n\r\n      catch(e){\r\n          console.log(e);\r\n          this.resetForm();\r\n      }\r\n    }\r\n\r\n  \r\n  render(){\r\n\r\n  \r\n      return (\r\n        <div className=\"loginForm\">\r\n          \r\n         log in\r\n         <InputField\r\n            type= 'text'\r\n            placeholder='Username'\r\n            value={this.state.username ? this.state.username : ''}\r\n            onChange={ (val) => this.setInputValue('username', val) }\r\n\r\n          />\r\n\r\n          <InputField\r\n            type= 'password'\r\n            placeholder='Password'\r\n            value = {this.state.password ? this.state.password : ''}\r\n            onChange={ (val) => this.setInputValue('password', val) }\r\n\r\n          />\r\n\r\n          <SubmitButton\r\n            text = 'Login'\r\n            disabled={this.state.buttonDisabled}\r\n            onClick={() => this.doLogin() }\r\n          />\r\n\r\n          \r\n        </div>\r\n      );\r\n}}\r\n\r\nexport default LoginForm;","import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component{\n\n\n\n  async componentDidMount(){\n    try{\n\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers:{\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n        let result = await res.json();\n        if (result && result.success){\n\n          UserStore.loading = false;\n          UserStore.isLoggedIn = true;\n          UserStore.username = result.username;\n        }\n        else{\n\n          UserStore.loading = false;\n          UserStore.isLoggedIn = false;\n        }\n    }\n    catch(e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n\n    }\n  };\n\n  async doLogout(){\n    try{\n\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers:{\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n        let result = await res.json();\n        if (result && result.success){\n\n          UserStore.isLoggedIn = false;\n          UserStore.username = '';\n         \n        }\n     \n    }\n    catch(e) {\n      console.log(e)\n\n  }};\n  render(){\n      if(UserStore.loading){\n        return(\n          <div className= \"app\">\n            <div className='container'>\n              Loading, please wait...\n            </div>\n          </div>\n        );\n      }\n\n      else{\n        if(UserStore.isLoggedIn){\n          <div className= \"app\">\n            <div className='container'>\n              Welcome {UserStore.username}\n\n              <SubmitButton\n                text={'Log out'}\n                disabled={false}\n                onClick={ () => this.doLogout()}\n              />\n            </div>\n          </div>\n        }\n      \n      return (\n        <div className=\"app\">\n          <div className='container'>\n            <SubmitButton\n                  text={'Log out'}\n                  disabled={false}\n                  onClick={ () => this.doLogout()}\n                  />\n              < LoginForm />\n\n          </div>\n        </div>\n      );\n}\n}\n}\n\nexport default observer(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}